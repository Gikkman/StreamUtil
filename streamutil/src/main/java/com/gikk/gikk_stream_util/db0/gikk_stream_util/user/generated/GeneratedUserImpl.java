package com.gikk.gikk_stream_util.db0.gikk_stream_util.user.generated;

import com.gikk.gikk_stream_util.db0.gikk_stream_util.user.User;
import com.gikk.gikk_stream_util.db0.gikk_stream_util.user.UserImpl;
import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation representing an entity (for example, a
 * row) in the Table gikk_stream_util.db0.gikk_stream_util.user.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made
 * to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedUserImpl extends AbstractBaseEntity<User> implements User {
    
    private Integer id;
    private String username;
    private String status;
    private Integer timeOnline;
    private Integer linesWritten;
    private Boolean isTrusted;
    private Boolean isFollower;
    private Boolean isSubscriber;
    
    protected GeneratedUserImpl() {
        
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public String getUsername() {
        return username;
    }
    
    @Override
    public String getStatus() {
        return status;
    }
    
    @Override
    public Integer getTimeOnline() {
        return timeOnline;
    }
    
    @Override
    public Integer getLinesWritten() {
        return linesWritten;
    }
    
    @Override
    public Boolean getIsTrusted() {
        return isTrusted;
    }
    
    @Override
    public Boolean getIsFollower() {
        return isFollower;
    }
    
    @Override
    public Boolean getIsSubscriber() {
        return isSubscriber;
    }
    
    @Override
    public final User setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public final User setUsername(String username) {
        this.username = username;
        return this;
    }
    
    @Override
    public final User setStatus(String status) {
        this.status = status;
        return this;
    }
    
    @Override
    public final User setTimeOnline(Integer timeOnline) {
        this.timeOnline = timeOnline;
        return this;
    }
    
    @Override
    public final User setLinesWritten(Integer linesWritten) {
        this.linesWritten = linesWritten;
        return this;
    }
    
    @Override
    public final User setIsTrusted(Boolean isTrusted) {
        this.isTrusted = isTrusted;
        return this;
    }
    
    @Override
    public final User setIsFollower(Boolean isFollower) {
        this.isFollower = isFollower;
        return this;
    }
    
    @Override
    public final User setIsSubscriber(Boolean isSubscriber) {
        this.isSubscriber = isSubscriber;
        return this;
    }
    
    @Override
    public User copy() {
        final User user = new UserImpl() {
            @Override
            protected final Speedment speedment() {
                return GeneratedUserImpl.this.speedment();
            }
        };
        
        setId(user.getId());
        setUsername(user.getUsername());
        setStatus(user.getStatus());
        setTimeOnline(user.getTimeOnline());
        setLinesWritten(user.getLinesWritten());
        setIsTrusted(user.getIsTrusted());
        setIsFollower(user.getIsFollower());
        setIsSubscriber(user.getIsSubscriber());
        
        return user;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("username = "+Objects.toString(getUsername()));
        sj.add("status = "+Objects.toString(getStatus()));
        sj.add("timeOnline = "+Objects.toString(getTimeOnline()));
        sj.add("linesWritten = "+Objects.toString(getLinesWritten()));
        sj.add("isTrusted = "+Objects.toString(getIsTrusted()));
        sj.add("isFollower = "+Objects.toString(getIsFollower()));
        sj.add("isSubscriber = "+Objects.toString(getIsSubscriber()));
        return "UserImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof User)) { return false; }
        final User thatUser = (User)that;
        if (!Objects.equals(this.getId(), thatUser.getId())) {return false; }
        if (!Objects.equals(this.getUsername(), thatUser.getUsername())) {return false; }
        if (!Objects.equals(this.getStatus(), thatUser.getStatus())) {return false; }
        if (!Objects.equals(this.getTimeOnline(), thatUser.getTimeOnline())) {return false; }
        if (!Objects.equals(this.getLinesWritten(), thatUser.getLinesWritten())) {return false; }
        if (!Objects.equals(this.getIsTrusted(), thatUser.getIsTrusted())) {return false; }
        if (!Objects.equals(this.getIsFollower(), thatUser.getIsFollower())) {return false; }
        if (!Objects.equals(this.getIsSubscriber(), thatUser.getIsSubscriber())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getUsername());
        hash = 31 * hash + Objects.hashCode(getStatus());
        hash = 31 * hash + Objects.hashCode(getTimeOnline());
        hash = 31 * hash + Objects.hashCode(getLinesWritten());
        hash = 31 * hash + Objects.hashCode(getIsTrusted());
        hash = 31 * hash + Objects.hashCode(getIsFollower());
        hash = 31 * hash + Objects.hashCode(getIsSubscriber());
        return hash;
    }
    
    @Override
    public Class<User> entityClass() {
        return User.class;
    }
}