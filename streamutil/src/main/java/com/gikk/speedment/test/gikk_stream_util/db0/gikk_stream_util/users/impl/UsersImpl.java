package com.gikk.speedment.test.gikk_stream_util.db0.gikk_stream_util.users.impl;

import com.gikk.speedment.test.gikk_stream_util.db0.gikk_stream_util.users.Users;
import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@431ce2a.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class UsersImpl extends AbstractBaseEntity<Users> implements Users {
    
    private Integer id;
    private String username;
    private Integer timeOnline;
    private Integer linesWritten;
    private Boolean isTrusted;
    private Boolean isFollower;
    private Boolean isSubscriber;
    
    UsersImpl(Speedment speedment) {
        super(speedment);
    }
    
    public UsersImpl(Speedment speedment, final Users users) {
        super(speedment);
        setId(users.getId());
        setUsername(users.getUsername());
        setTimeOnline(users.getTimeOnline());
        setLinesWritten(users.getLinesWritten());
        setIsTrusted(users.getIsTrusted());
        setIsFollower(users.getIsFollower());
        setIsSubscriber(users.getIsSubscriber());
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public String getUsername() {
        return username;
    }
    
    @Override
    public Integer getTimeOnline() {
        return timeOnline;
    }
    
    @Override
    public Integer getLinesWritten() {
        return linesWritten;
    }
    
    @Override
    public Boolean getIsTrusted() {
        return isTrusted;
    }
    
    @Override
    public Boolean getIsFollower() {
        return isFollower;
    }
    
    @Override
    public Boolean getIsSubscriber() {
        return isSubscriber;
    }
    
    @Override
    public final UsersImpl setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public final UsersImpl setUsername(String username) {
        this.username = username;
        return this;
    }
    
    @Override
    public final UsersImpl setTimeOnline(Integer timeOnline) {
        this.timeOnline = timeOnline;
        return this;
    }
    
    @Override
    public final UsersImpl setLinesWritten(Integer linesWritten) {
        this.linesWritten = linesWritten;
        return this;
    }
    
    @Override
    public final UsersImpl setIsTrusted(Boolean isTrusted) {
        this.isTrusted = isTrusted;
        return this;
    }
    
    @Override
    public final UsersImpl setIsFollower(Boolean isFollower) {
        this.isFollower = isFollower;
        return this;
    }
    
    @Override
    public final UsersImpl setIsSubscriber(Boolean isSubscriber) {
        this.isSubscriber = isSubscriber;
        return this;
    }
    
    @Override
    public Users copy() {
        return new UsersImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("username = "+Objects.toString(getUsername()));
        sj.add("timeOnline = "+Objects.toString(getTimeOnline()));
        sj.add("linesWritten = "+Objects.toString(getLinesWritten()));
        sj.add("isTrusted = "+Objects.toString(getIsTrusted()));
        sj.add("isFollower = "+Objects.toString(getIsFollower()));
        sj.add("isSubscriber = "+Objects.toString(getIsSubscriber()));
        return "UsersImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Users)) { return false; }
        @SuppressWarnings("unchecked")
        final Users thatUsers = (Users)that;
        if (!Objects.equals(this.getId(), thatUsers.getId())) {return false; }
        if (!Objects.equals(this.getUsername(), thatUsers.getUsername())) {return false; }
        if (!Objects.equals(this.getTimeOnline(), thatUsers.getTimeOnline())) {return false; }
        if (!Objects.equals(this.getLinesWritten(), thatUsers.getLinesWritten())) {return false; }
        if (!Objects.equals(this.getIsTrusted(), thatUsers.getIsTrusted())) {return false; }
        if (!Objects.equals(this.getIsFollower(), thatUsers.getIsFollower())) {return false; }
        if (!Objects.equals(this.getIsSubscriber(), thatUsers.getIsSubscriber())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getUsername());
        hash = 31 * hash + Objects.hashCode(getTimeOnline());
        hash = 31 * hash + Objects.hashCode(getLinesWritten());
        hash = 31 * hash + Objects.hashCode(getIsTrusted());
        hash = 31 * hash + Objects.hashCode(getIsFollower());
        hash = 31 * hash + Objects.hashCode(getIsSubscriber());
        return hash;
    }
    
    @Override
    public Class<Users> getEntityClass_() {
        return Users.class;
    }
}