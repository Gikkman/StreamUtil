package com.gikk.speedment.test.gikk_stream_util.db0.gikk_stream_util.users;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@431ce2a.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Users extends Entity<Users> {
    
    /**
     * This Field corresponds to the {@link Users} field that can be obtained
     * using the {@link Users#getId()} method.
     */
    public final static ComparableField<Users, Integer> ID = new ComparableFieldImpl<>("ID", Users::getId, Users::setId);
    /**
     * This Field corresponds to the {@link Users} field that can be obtained
     * using the {@link Users#getUsername()} method.
     */
    public final static StringField<Users> USERNAME = new StringFieldImpl<>("USERNAME", Users::getUsername, Users::setUsername);
    /**
     * This Field corresponds to the {@link Users} field that can be obtained
     * using the {@link Users#getTimeOnline()} method.
     */
    public final static ComparableField<Users, Integer> TIMEONLINE = new ComparableFieldImpl<>("TIME_ONLINE", Users::getTimeOnline, Users::setTimeOnline);
    /**
     * This Field corresponds to the {@link Users} field that can be obtained
     * using the {@link Users#getLinesWritten()} method.
     */
    public final static ComparableField<Users, Integer> LINESWRITTEN = new ComparableFieldImpl<>("LINES_WRITTEN", Users::getLinesWritten, Users::setLinesWritten);
    /**
     * This Field corresponds to the {@link Users} field that can be obtained
     * using the {@link Users#getIsTrusted()} method.
     */
    public final static ComparableField<Users, Boolean> ISTRUSTED = new ComparableFieldImpl<>("IS_TRUSTED", Users::getIsTrusted, Users::setIsTrusted);
    /**
     * This Field corresponds to the {@link Users} field that can be obtained
     * using the {@link Users#getIsFollower()} method.
     */
    public final static ComparableField<Users, Boolean> ISFOLLOWER = new ComparableFieldImpl<>("IS_FOLLOWER", Users::getIsFollower, Users::setIsFollower);
    /**
     * This Field corresponds to the {@link Users} field that can be obtained
     * using the {@link Users#getIsSubscriber()} method.
     */
    public final static ComparableField<Users, Boolean> ISSUBSCRIBER = new ComparableFieldImpl<>("IS_SUBSCRIBER", Users::getIsSubscriber, Users::setIsSubscriber);
    
    /**
     * Returns the id of this Users. The id field corresponds to the database
     * column db0.gikk_stream_util.users.ID.
     * 
     * @return the id of this Users
     */
    Integer getId();
    
    /**
     * Returns the username of this Users. The username field corresponds to the
     * database column db0.gikk_stream_util.users.USERNAME.
     * 
     * @return the username of this Users
     */
    String getUsername();
    
    /**
     * Returns the timeOnline of this Users. The timeOnline field corresponds to
     * the database column db0.gikk_stream_util.users.TIME_ONLINE.
     * 
     * @return the timeOnline of this Users
     */
    Integer getTimeOnline();
    
    /**
     * Returns the linesWritten of this Users. The linesWritten field corresponds
     * to the database column db0.gikk_stream_util.users.LINES_WRITTEN.
     * 
     * @return the linesWritten of this Users
     */
    Integer getLinesWritten();
    
    /**
     * Returns the isTrusted of this Users. The isTrusted field corresponds to
     * the database column db0.gikk_stream_util.users.IS_TRUSTED.
     * 
     * @return the isTrusted of this Users
     */
    Boolean getIsTrusted();
    
    /**
     * Returns the isFollower of this Users. The isFollower field corresponds to
     * the database column db0.gikk_stream_util.users.IS_FOLLOWER.
     * 
     * @return the isFollower of this Users
     */
    Boolean getIsFollower();
    
    /**
     * Returns the isSubscriber of this Users. The isSubscriber field corresponds
     * to the database column db0.gikk_stream_util.users.IS_SUBSCRIBER.
     * 
     * @return the isSubscriber of this Users
     */
    Boolean getIsSubscriber();
    
    /**
     * Sets the id of this Users. The id field corresponds to the database column
     * db0.gikk_stream_util.users.ID.
     * 
     * @param id to set of this Users
     * @return this Users instance
     */
    Users setId(Integer id);
    
    /**
     * Sets the username of this Users. The username field corresponds to the
     * database column db0.gikk_stream_util.users.USERNAME.
     * 
     * @param username to set of this Users
     * @return this Users instance
     */
    Users setUsername(String username);
    
    /**
     * Sets the timeOnline of this Users. The timeOnline field corresponds to the
     * database column db0.gikk_stream_util.users.TIME_ONLINE.
     * 
     * @param timeOnline to set of this Users
     * @return this Users instance
     */
    Users setTimeOnline(Integer timeOnline);
    
    /**
     * Sets the linesWritten of this Users. The linesWritten field corresponds to
     * the database column db0.gikk_stream_util.users.LINES_WRITTEN.
     * 
     * @param linesWritten to set of this Users
     * @return this Users instance
     */
    Users setLinesWritten(Integer linesWritten);
    
    /**
     * Sets the isTrusted of this Users. The isTrusted field corresponds to the
     * database column db0.gikk_stream_util.users.IS_TRUSTED.
     * 
     * @param isTrusted to set of this Users
     * @return this Users instance
     */
    Users setIsTrusted(Boolean isTrusted);
    
    /**
     * Sets the isFollower of this Users. The isFollower field corresponds to the
     * database column db0.gikk_stream_util.users.IS_FOLLOWER.
     * 
     * @param isFollower to set of this Users
     * @return this Users instance
     */
    Users setIsFollower(Boolean isFollower);
    
    /**
     * Sets the isSubscriber of this Users. The isSubscriber field corresponds to
     * the database column db0.gikk_stream_util.users.IS_SUBSCRIBER.
     * 
     * @param isSubscriber to set of this Users
     * @return this Users instance
     */
    Users setIsSubscriber(Boolean isSubscriber);
}